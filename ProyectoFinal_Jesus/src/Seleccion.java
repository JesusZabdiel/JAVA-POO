
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;


/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Zady-
 */
public class Seleccion extends javax.swing.JFrame {

    
    Vehiculo[] estacionamiento = new Vehiculo[100];
    int lugaresDis = 100;

    

    /**
     * Creates new form Seleccion
     */
    private Administrador principal;
    public Seleccion(Administrador principal) {
        initComponents();
        this.principal = principal;
        
    }
    
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField2 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jTextArea2 = new javax.swing.JTextArea();
        jPanel2 = new javax.swing.JPanel();
        tipoVehiculo = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        tfPlacas = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        tfMarca = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        tfModelo = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        tfColor = new javax.swing.JTextField();

        jTextField2.setText("jTextField2");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Ingresar vehículo");
        setResizable(false);
        setSize(new java.awt.Dimension(600, 400));

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Tarifas");
        getContentPane().add(jLabel1, java.awt.BorderLayout.PAGE_START);

        jPanel1.setLayout(new java.awt.GridLayout(2, 1));

        jTextArea2.setEditable(false);
        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jTextArea2.setText("Vehículo       \t    Primeras 2 hrs.        Fracción 15 mins.\n\nAuto/\nCamioneta                  15.50                             10.00\nMotocicleta                  10.20                               8.50\nCamión                        20.15                             13.30\nBicicleta                        8.50                                 5.25");
        jPanel1.add(jTextArea2);

        jPanel2.setLayout(new java.awt.GridLayout(5, 2));

        tipoVehiculo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Automóvil", "Motocicleta", "Camión", "Bicicleta" }));
        tipoVehiculo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tipoVehiculoActionPerformed(evt);
            }
        });
        jPanel2.add(tipoVehiculo);

        jButton1.setText("Registar vehículo");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton1);

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Placas:");
        jPanel2.add(jLabel2);
        jLabel2.getAccessibleContext().setAccessibleName("lbPlacas");

        tfPlacas.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jPanel2.add(tfPlacas);

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Marca:");
        jPanel2.add(jLabel4);

        tfMarca.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        tfMarca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfMarcaActionPerformed(evt);
            }
        });
        jPanel2.add(tfMarca);

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Modelo:");
        jPanel2.add(jLabel5);

        tfModelo.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jPanel2.add(tfModelo);

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Color:");
        jPanel2.add(jLabel3);

        tfColor.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jPanel2.add(tfColor);

        jPanel1.add(jPanel2);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        switch (tipoVehiculo.getSelectedIndex()){
            case 0:
                for(int i = 0; i < estacionamiento.length; i++) {
                    if(estacionamiento[i] == null){
                        estacionamiento[i] = new Automovil(tfPlacas.getText().toUpperCase(),
                      tfMarca.getText().toUpperCase(), tfColor.getText().toUpperCase(), 
                                tfModelo.getText().toUpperCase());
                        this.setVisible(false);
                        this.tfPlacas.setText(null);
                        this.tfMarca.setText(null);
                        this.tfModelo.setText(null);
                        this.tfColor.setText(null);
                        principal.setVisible(true);
                        principal.setLabelRegistro("Vehículo registrado con éxito"+
                                "  # Ticket: " + estacionamiento[i].getTicket());
                        this.registrarEntrada(estacionamiento[i]);
                        principal.setTextLugares();
                        break;
                    }else{
                        principal.setLabelRegistro("No quedan más lugares disponibles");
                    }
                    
                }
                break;
            
            case 1:
                for(int i = 0; i < estacionamiento.length; i++) {
                    if(estacionamiento[i] == null){
                        estacionamiento[i] = new Motocicleta(this.tfPlacas.getText().toUpperCase(),
                        this.tfMarca.getText().toUpperCase(), 
                                this.tfColor.getText().toUpperCase());
                        this.tfPlacas.setText(null);
                        this.tfMarca.setText(null);
                        this.tfModelo.setText(null);
                        this.tfColor.setText(null);
                        principal.setVisible(true);
                        principal.setLabelRegistro("Vehículo registrado con éxito"+
                                "  # Ticket: " + estacionamiento[i].getTicket());
                        this.registrarEntrada(estacionamiento[i]);
                        principal.setTextLugares();
                        break;
                    }else{
                        principal.setLabelRegistro("No quedan más lugares disponibles");
                    }
                    
                }
                break;
            case 2:
                for(int i = 0; i < estacionamiento.length; i++) {
                    if(estacionamiento[i] == null){
                        estacionamiento[i] = new Camion(this.tfPlacas.getText().toUpperCase(),
                                this.tfMarca.getText().toUpperCase());
                        this.tfPlacas.setText(null);
                        this.tfMarca.setText(null);
                        this.tfModelo.setText(null);
                        this.tfColor.setText(null);
                      principal.setVisible(true);
                      principal.setLabelRegistro("Vehículo registrado con éxito"+
                                "  # Ticket: " + estacionamiento[i].getTicket());
                      this.registrarEntrada(estacionamiento[i]);
                      principal.setTextLugares();
                      break;
                    }else{
                        principal.setLabelRegistro("No quedan más lugares disponibles");
                    }
                    
                }
                break;
            case 3:
                for(int i = 0; i < estacionamiento.length; i++) {
                    if(estacionamiento[i] == null){
                        estacionamiento[i] = new Bicicleta("-------", 
                                this.tfMarca.getText().toUpperCase(),
                                this.tfColor.getText().toUpperCase());
                        this.tfPlacas.setText(null);
                        this.tfMarca.setText(null);
                        this.tfModelo.setText(null);
                        this.tfColor.setText(null);
                        principal.setVisible(true);
                        principal.setLabelRegistro("Vehículo registrado con éxito"+
                                "  # Ticket: " + estacionamiento[i].getTicket());
                        this.registrarEntrada(estacionamiento[i]);
                        principal.setTextLugares();
                        break;
                    }else{
                        principal.setLabelRegistro("No quedan más lugares disponibles");
                    }
                    
                }
                break;
            default:
                
                
        }
        this.setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed
    
    public int getLugaresDisponibles(){
        int counter = 0;
        for (Vehiculo vehiculo : estacionamiento) {
            if(vehiculo == null){
                counter++;                
            }            
        }
        return counter;
    }
    
    
    public void registrarEntrada(Vehiculo vehiculo){
        String fechaEn = vehiculo.getFechaEntrada().toString();
        fechaEn = fechaEn.replace("CST ", "");
        try{
            PrintWriter file = new PrintWriter(new FileWriter("entradas.txt",true));
            
            if(vehiculo instanceof Automovil){
                Automovil automovil = (Automovil)vehiculo;
                file.println("Automovil\t" + automovil.getPlacas() + "\t\t" +
                        automovil.getMarca() + "\t\t" + automovil.getTicket() + "\t\t"+
                        automovil.getModelo() +"\t\t" + automovil.getColor() + "\t\t"+
                        fechaEn);
            }else if(vehiculo instanceof Motocicleta){
                Motocicleta moto = (Motocicleta)vehiculo;
                file.println("Motocicleta\t" + moto.getPlacas() + "\t\t" +
                moto.getMarca() + "\t\t" + moto.getTicket() + "\t\t----------\t\t" + 
                        moto.getColor() + "\t\t" + fechaEn);
                
            }else if(vehiculo instanceof Camion){
                Camion camion = (Camion)vehiculo;
                file.println("Camion\t" + camion.getPlacas() + "\t\t" +
                camion.getMarca() + "\t\t" + camion.getTicket() + "\t\t----------\t\t---------"
                + "\t\t" + fechaEn);
                                
            }else{
                Bicicleta bici = (Bicicleta)vehiculo;
                file.println("Bicicleta\t" + bici.getPlacas() + "\t\t" +
                bici.getMarca() + "\t\t" + bici.getTicket() + "\t\t----------\t\t"+
                bici.getColor() + "\t\t" + fechaEn);
            }
            file.close();            
            
        }catch(IOException ex){
            System.out.println("Ha ocurrido un error");            
        }
        
    }
    
    public void registrarSalida(Vehiculo vehiculo){
        String fechaSa = vehiculo.getFechaSalida().toString();
        fechaSa = fechaSa.replace("CST ", "");
        try{
            PrintWriter file = new PrintWriter(new FileWriter("salidas.txt",true));
            
            if(vehiculo instanceof Automovil){
                Automovil automovil = (Automovil)vehiculo;
                file.println("Automovil\t" + automovil.getPlacas() + "\t\t" +
                        automovil.getMarca() + "\t\t" + automovil.getTicket() + "\t\t"+
                        automovil.getModelo() +"\t\t" + automovil.getColor() + "\t\t"+
                        fechaSa);
            }else if(vehiculo instanceof Motocicleta){
                Motocicleta moto = (Motocicleta)vehiculo;
                file.println("Motocicleta\t" + moto.getPlacas() + "\t\t" +
                moto.getMarca() + "\t\t" + moto.getTicket() + "\t\t----------\t\t" + 
                        moto.getColor() + "\t\t" + fechaSa);
                
            }else if(vehiculo instanceof Camion){
                Camion camion = (Camion)vehiculo;
                file.println("Camion\t" + camion.getPlacas() + "\t\t" +
                camion.getMarca() + "\t\t" + camion.getTicket() + "\t\t----------\t\t----------"
                + "\t\t" + fechaSa);
                                
            }else{
                Bicicleta bici = (Bicicleta)vehiculo;
                file.println("Bicicleta\t" + bici.getPlacas() + "\t\t" +
                bici.getMarca() + "\t\t" + bici.getTicket() + "\t\t----------\t\t"+
                bici.getColor() + "\t\t" + fechaSa);
            }
            file.close();            
            
        }catch(IOException ex){
            System.out.println("Ha ocurrido un error");            
        }
        
    }
    
    private void tipoVehiculoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tipoVehiculoActionPerformed
        
        switch(tipoVehiculo.getSelectedIndex()){
            case 0:
                tfModelo.setEnabled(true);
                tfMarca.setEnabled(true);
                tfColor.setEnabled(true);
                tfPlacas.setEnabled(true);
                break;
                
            case 1:
                tfModelo.setEnabled(false);
                tfMarca.setEnabled(true);
                tfColor.setEnabled(true);
                tfPlacas.setEnabled(true);
                break;
            case 2:
                tfColor.setEnabled(false);
                tfMarca.setEnabled(true);
                tfModelo.setEnabled(false);
                tfPlacas.setEnabled(true);
                break;
            case 3:
                tfColor.setEnabled(true);
                tfMarca.setEnabled(true);
                tfModelo.setEnabled(false);
                tfPlacas.setEnabled(false);
                break;
                
            
        }
    }//GEN-LAST:event_tipoVehiculoActionPerformed

    private void tfMarcaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfMarcaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfMarcaActionPerformed
    
    public Vehiculo[] getEstacionamiento(){
        return this.estacionamiento;
    }
    
    
    /**
     * @param args the command line arguments
     */
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField tfColor;
    private javax.swing.JTextField tfMarca;
    private javax.swing.JTextField tfModelo;
    private javax.swing.JTextField tfPlacas;
    private javax.swing.JComboBox<String> tipoVehiculo;
    // End of variables declaration//GEN-END:variables
}
